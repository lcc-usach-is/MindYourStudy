proyecto ISWI SQLITE

CREATE TABLE "ASIGNATURA" (
	"ASI_ID"	INTEGER NOT NULL,
	"ASI_NOM"	TEXT NOT NULL,
	"ASI_DESC"	TEXT,
	"ASI_NOM_PROF"	TEXT NOT NULL,
	"ASI_MAIL_PROF"	TEXT,
	"ASI_EST"	INTEGER NOT NULL,
	PRIMARY KEY("ASI_ID" AUTOINCREMENT)
);


INSERT INTO ASIGNATURA VALUES(NULL, "Logica Computacional", "curso LCC", "Ruben Carvajal", "ruben.carvajal@usach.cl", 0);
INSERT INTO ASIGNATURA VALUES(NULL, "Programacion Avanzada", "Curso LCC del semestre 4", "Nicolas Theriault", "nicolas.theriault@usach.cl", 0);
INSERT INTO ASIGNATURA VALUES(NULL, "Algoritmos Distribuidos", "Curso LCC del semestre 6", "Ruben Carvajal", "ruben.carvajal@usach.cl", 1);
INSERT INTO ASIGNATURA VALUES(NULL, "Ingenieria de software I", "Curso LCC del semestre 6", "Dino Araya", "dino.araya@usach.cl", 1);
INSERT INTO ASIGNATURA VALUES(NULL, "Comunicacion de Computadoras", "Curso LCC del semestre 6", "Juan Cubillos", "juan.cubillos@usach.cl", 1);
INSERT INTO ASIGNATURA VALUES(NULL, "MBDC", "Curso LCC del semestre 6", "Fredi Palominos", "fredi.palominos@usach.cl", 1);
INSERT INTO ASIGNATURA VALUES(NULL, "Fundamentos II", "Curso LCC del semestre 6", "Rodrigo Abarzua", "rodrigo.abarzua@usach.cl", 1);

CREATE TABLE "TIPO_BLOQUE" (
	"BL_ID"		INTEGER NOT NULL,
	"BL_INI"	TEXT NOT NULL,
	"BL_FIN"	TEXT NOT NULL,
	PRIMARY KEY("BL_ID")
);

INSERT INTO "TIPO_BLOQUE" VALUES ('1', '08:00', '09:30');
INSERT INTO "TIPO_BLOQUE" VALUES ('2', '09:40', '11:10');
INSERT INTO "TIPO_BLOQUE" VALUES ('3', '11:20', '12:50');
INSERT INTO "TIPO_BLOQUE" VALUES ('4', '13:50', '15:20');
INSERT INTO "TIPO_BLOQUE" VALUES ('5', '15:30', '17:00');
INSERT INTO "TIPO_BLOQUE" VALUES ('6', '17:10', '18:40');
INSERT INTO "TIPO_BLOQUE" VALUES ('7', '18:45', '20:10');
INSERT INTO "TIPO_BLOQUE" VALUES ('8', '20:10', '21:35');
INSERT INTO "TIPO_BLOQUE" VALUES ('9', '21:35', '23:00');

CREATE TABLE BLOQUE (
	"BL_NUM"    	INTEGER NOT NULL,
    	"BL_ID_ASI"	INTEGER NOT NULL, 
	"BL_DIA_SEM"	TEXT NOT NULL,
	"BL_INI"	TEXT NOT NULL,
	"BL_FIN"	TEXT NOT NULL,
	PRIMARY KEY("BL_NUM", "BL_ID_ASI")
    	FOREIGN KEY ("BL_ID_ASI")
       		REFERENCES ASIGNATURA ("ASI_ID")
);

CREATE TABLE DIA (
	"DIA_ID"	TEXT NOT NULL,
    "DIA_NOMBRE"	TEXT NOT NULL, 
	PRIMARY KEY("DIA_ID")
);

INSERT INTO DIA VALUES("0", "Domingo");
INSERT INTO DIA VALUES("1", "Lunes");
INSERT INTO DIA VALUES("2", "Martes");
INSERT INTO DIA VALUES("3", "Miercoles");
INSERT INTO DIA VALUES("4", "Jueves");
INSERT INTO DIA VALUES("5", "Viernes");
INSERT INTO DIA VALUES("6", "Sabado");


CREATE TABLE "TIPO_NOTA" (
	"TNOT_NOM"	TEXT NOT NULL,
	"TNOT_DESC"	TEXT NOT NULL,
	PRIMARY KEY("TNOT_NOM")
);

INSERT INTO TIPO_NOTA VALUES("catedra", "notas teoricas de un curso");
INSERT INTO TIPO_NOTA VALUES("laboratorio", "actividades practicas evaluadas");
INSERT INTO TIPO_NOTA VALUES("taller", "actividades en clases evaluadas");


CREATE TABLE NOTA (
	"NOT_ID"	INTEGER NOT NULL,
	"NOT_ID_ASI"    INTEGER NOT NULL,
	"NOT_TIPO"	TEXT NOT NULL,
	"NOT_VAL"	REAL NOT NULL,
	PRIMARY KEY("NOT_ID" AUTOINCREMENT)
    FOREIGN KEY ("NOT_ID_ASI")
       		REFERENCES ASIGNATURA ("ASI_ID")
	FOREIGN KEY ("NOT_TIPO")
       		REFERENCES TIPO_NOTA ("TNOT_NOM") 
);

INSERT INTO NOTA VALUES(NULL,1, "catedra", 6.0);
INSERT INTO NOTA VALUES(NULL,2, "catedra", 3.1);
INSERT INTO NOTA VALUES(NULL,3, "catedra", 4.0);
INSERT INTO NOTA VALUES(NULL,3, "catedra", 3.1);
INSERT INTO NOTA VALUES(NULL,4, "catedra", 3.9);
INSERT INTO NOTA VALUES(NULL,4, "catedra", 3.7);
INSERT INTO NOTA VALUES(NULL,2, "laboratorio", 3.7);

CREATE TABLE PRIORIDAD (
	"PRI_NIVEL"	INTEGER NOT NULL,
    	"PRI_DESC"	TEXT NOT NULL, 
	"PRI_CANT"	INTEGER NOT NULL,
	PRIMARY KEY("PRI_NIVEL")  
);

INSERT INTO PRIORIDAD VALUES(1, "La prioridad es baja, se enviaran 1 notificaciones.", 1);
INSERT INTO PRIORIDAD VALUES(2, "La prioridad es media, se enviaran 2 notificaciones.", 2);
INSERT INTO PRIORIDAD VALUES(3, "La prioridad es media alta, se enviaran 3 notificaciones.", 3);
INSERT INTO PRIORIDAD VALUES(4, "La prioridad es alta, se enviaran 4 notificaciones.", 4);

CREATE TABLE TIPO_ACTIVIDAD (
	"TACT_TIPO"	TEXT NOT NULL,
    	"TACT_DESC"	TEXT NOT NULL, 
	PRIMARY KEY("TACT_TIPO")  
);

INSERT INTO TIPO_ACTIVIDAD VALUES("evaluativa", "actividades que son evaluadas");
INSERT INTO TIPO_ACTIVIDAD VALUES("estudio", "estudiar para alguna asignatura");

CREATE TABLE ACTIVIDAD (
	"ACT_ID"    	INTEGER NOT NULL,
    	"ACT_ID_ASI"	INTEGER NOT NULL, 
	"ACT_DESC"	TEXT NOT NULL,
	"ACT_FECHA"	TEXT NOT NULL,
	"ACT_INI"	TEXT,
	"ACT_PRI"	INTEGER NOT NULL,
	"ACT_TIPO"	TEXT NOT NULL,
	PRIMARY KEY("ACT_ID" AUTOINCREMENT)
    	FOREIGN KEY ("ACT_ID_ASI")
       		REFERENCES ASIGNATURA ("ASI_ID")
    	FOREIGN KEY ("ACT_PRI")
       		REFERENCES PRIORIDAD ("PRI_NIVEL")
	FOREIGN KEY ("ACT_TIPO")
       		REFERENCES TIPO_ACTIVIDAD ("TACT_TIPO")  
);

INSERT INTO ACTIVIDAD VALUES(NULL, 3, "Entregar trabajo 2", "2021-01-11",NULL, 4, "evaluativa");
INSERT INTO ACTIVIDAD VALUES(NULL, 3, "Estudiar", "2021-01-11", NULL, 2, "evaluativa");
INSERT INTO ACTIVIDAD VALUES(NULL, 3, "Estudiar", "2021-01-14", "4pm", 2, "estudio");
INSERT INTO ACTIVIDAD VALUES(NULL, 4, "Estudiar", "2021-01-14", "6pm", 2, "estudio");
INSERT INTO ACTIVIDAD VALUES(NULL, 4, "Avance 4", "2021-01-15", "4pm", 2, "estudio");
INSERT INTO ACTIVIDAD VALUES(NULL, 4, "Presentar avance 4", "2021-01-20", "6pm", 2, "evaluativa");
INSERT INTO ACTIVIDAD VALUES(NULL, 7, "Avanzar Trabajo Lab 3", "2021-01-18", NULL, 4, "estudio");
INSERT INTO ACTIVIDAD VALUES(NULL, 5, "Prueba 3", "2021-01-19", "6pm", 4, "evaluativa");
INSERT INTO "main"."ACTIVIDAD"
("ACT_ID_ASI", "ACT_DESC", "ACT_FECHA", "ACT_PRI", "ACT_TIPO")
VALUES (5, 'aas', '2021-01-19', 4, 'evaluativa');

CREATE TABLE TIPO_CONSEJO (
	"TCON_NOM"	TEXT NOT NULL,
	"TCON_DESC"	TEXT NOT NULL,
	PRIMARY KEY("TCON_NOM")
);

INSERT INTO TIPO_CONSEJO VALUES("fisico", "consejos de naturaleza fisica")
INSERT INTO TIPO_CONSEJO VALUES("estudio", "Consejos y buenas prï¿½cticas para mejorar el estudio personal")
INSERT INTO TIPO_CONSEJO VALUES("recomendacionBuena", "consejos relacionados con el buen rendimiento academico");
INSERT INTO TIPO_CONSEJO VALUES("recomendacionMedia", "consejos relacionados con el normal rendimiento academico");
INSERT INTO TIPO_CONSEJO VALUES("recomendacionMala", "consejos relacionados con el mal rendimiento academico")

CREATE TABLE "CONSEJO" (
	"CON_ID"	INTEGER NOT NULL,
	"CON_TIPO"	TEXT NOT NULL,
	"CON_DESC"	TEXT NOT NULL,
	FOREIGN KEY("CON_TIPO") REFERENCES "TIPO_CONSEJO"("TCON_NOM"),
	PRIMARY KEY("CON_ID" AUTOINCREMENT)
);

INSERT INTO CONSEJO VALUES(NULL, "recomendacionBuena", "Tus calificaciones son buenas, no te vendria mal un descanso.")
INSERT INTO CONSEJO VALUES(NULL, "recomendacionMala", "Tus calificaciones estan un poco bajas, podrias estudiar unos minutos mal al dia.")
INSERT INTO CONSEJO VALUES(NULL, "recomendacionBuena", "Toma un descanso, disfruta con tu familia.")
INSERT INTO CONSEJO VALUES(NULL, "recomendacionBuena", "Buenas notas, podrias jugar algun juego, que tal Transformice")

CREATE TABLE "VERSION" (
	"VERSION_NUM"	TEXT NOT NULL,
	"VERSION_DATE"	TEXT NOT NULL,
	PRIMARY KEY("VERSION_NUM")
);

INSERT INTO VERSION VALUES("1.0", "2021-02-05");

CONSULTA ASIGNATURAS ACTIVAS

SELECT ASI_NOM, ASI_EST FROM ASIGNATURA
WHERE ASI_EST = 1;

CONSULTA CANTIDAD DE ACTIVIDADES HISTORICAS POR ASIGNATURA

SELECT count(ACTIVIDAD.ACT_ID_ASI) as CANTIDAD_ACTIVIDADES, ASIGNATURA.ASI_NOM as asignatura FROM ASIGNATURA, ACTIVIDAD
WHERE ACTIVIDAD.ACT_ID_ASI = ASIGNATURA.ASI_ID
GROUP BY asignatura

CONSULTA ACTIVIDADES DE HOY

SELECT ACTIVIDAD.ACT_FECHA as fecha, ASIGNATURA.ASI_NOM as nombre FROM ACTIVIDAD, ASIGNATURA
WHERE fecha = "20211401" AND ACTIVIDAD.ACT_ID_ASI = ASIGNATURA.ASI_ID


outer join


SELECT * 
FROM ACTIVIDAD 
WHERE 	strftime('%W',ACTIVIDAD.ACT_FECHA) = strftime('%W',DATE('now')) 
		AND strftime('%m',ACTIVIDAD.ACT_FECHA) = strftime('%m',DATE('now')) 
		AND strftime('%Y',ACTIVIDAD.ACT_FECHA) = strftime('%Y',DATE('now'))  
		AND ACTIVIDAD.ACT_FECHA <= DATE('now')

SELECT * FROM CONSEJO 
WHERE CONSEJO.CON_TIPO = "recomendacionBuena"
ORDER BY RANDOM() LIMIT 1;

CALENDARIO MENSUAL

SELECT strftime('%w', ACT_FECHA) as day, strftime('%W', ACT_FECHA) as week, ACT_FECHA, ASI_NOM, ACT_DESC, ACT_INI
FROM ACTIVIDAD, ASIGNATURA
WHERE 	strftime('%m',ACTIVIDAD.ACT_FECHA) = strftime('%m',DATE('now')) 
		AND strftime('%Y',ACTIVIDAD.ACT_FECHA) = strftime('%Y',DATE('now'))
		AND ACT_ID_ASI = ASI_ID
ORDER BY week, day

CONSEJO RANDOM

SELECT CONSEJO.CON_DESC 
FROM CONSEJO 
WHERE CONSEJO.CON_TIPO NOT IN("recomendacionBuena", "recomendacionMedia", "recomendacionMala")
ORDER BY RANDOM() 
LIMIT 1;

NOTIFICACION DE ACTIVIDADES PROXIMAS

SELECT * FROM ACTIVIDAD 
WHERE (strftime('%d', ACTIVIDAD.ACT_FECHA) - strftime('%d', DATE('now'))) BETWEEN 0 AND 4

NOTIFICACION DE ACTIVIDADES EVALUATIVAS PROXIMAS

SELECT * FROM ACTIVIDAD 
WHERE (strftime('%d', ACTIVIDAD.ACT_FECHA) - strftime('%d', DATE('now'))) BETWEEN 0 AND 4
	AND ACT_TIPO = "evaluativa"

NOTIFICACIONES + CANTIDAD

WITH A as (SELECT  	ASI_NOM as asig, 
					ACT_DESC as descripcion,
					(strftime('%d', ACTIVIDAD.ACT_FECHA) - strftime('%d', DATE('now'))) as diasFaltantes, 
					PRI_CANT as cantidadNotificaciones 
					FROM ACTIVIDAD, ASIGNATURA, PRIORIDAD 
					WHERE PRI_NIVEL = ACT_PRI
					AND ASI_ID = ACT_ID_ASI
					AND diasFaltantes BETWEEN 0 AND PRI_CANT)
SELECT "Tienes una actividad de "||A.asig||(CASE 	
												WHEN diasFaltantes = 0 THEN " hoy."
												WHEN diasFaltantes = 1 THEN " en 1 dia."
												ELSE " en "||A.diasFaltantes||" dias."
												END) as Salida,
		A.cantidadNotificaciones as Notificaciones
FROM A 


CALCULAR NOTA FINAL (SUBQUERY POR TIPOS)DE UN CIERTO RAMO

SELECT t.ramo, ROUND(AVG(t.promedio),1) as nota_final 
FROM (SELECT ASIGNATURA.ASI_NOM as ramo, NOTA.NOT_TIPO,ROUND(AVG(NOTA.NOT_VAL),1) as promedio FROM NOTA, ASIGNATURA WHERE NOTA.NOT_ID_ASI = '5' GROUP BY NOTA.NOT_TIPO) as t
GROUP BY t.ramo

CALCULAR NOTA FINAL (SUBQUERY POR TIPOS)

SELECT t.ramo, ROUND(AVG(t.promedio),1) as nota_final 
FROM (SELECT ASIGNATURA.ASI_NOM as ramo, NOTA.NOT_TIPO,ROUND(AVG(NOTA.NOT_VAL),1) as promedio FROM NOTA, ASIGNATURA WHERE NOTA.NOT_ID_ASI = ASIGNATURA.ASI_ID GROUP BY NOTA.NOT_TIPO, NOTA.NOT_ID_ASI) as t
GROUP BY t.ramo

GENERAR HORARIO

SELECT DIA_NOMBRE, ASI_NOM, BL_INI, BL_FIN
FROM BLOQUE, DIA, ASIGNATURA
WHERE BL_DIA_SEM = DIA_ID AND BL_ID_ASI = ASI_ID AND ASI_EST = '1'

GENERAR CONSEJO DE UN TIPO EN ESPECIFICO

SELECT CON_DESC FROM CONSEJO
WHERE CON_TIPO = "recomendacionBuena"
ORDER BY RANDOM()
LIMIT 1;

SELECT * FROM ACTIVIDAD WHERE strftime('%W',ACTIVIDAD.ACT_FECHA) = strftime('%W',DATE('now')) AND strftime('%m',ACTIVIDAD.ACT_FECHA) = strftime('%m',DATE('now')) AND strftime('%Y',ACTIVIDAD.ACT_FECHA) = strftime('%Y',DATE('now')) AND ACTIVIDAD.ACT_FECHA <= DATE('now')



def NotificarActividad():
 act = 	WITH A AS (
 				SELECT
 					ASI_NOM AS asig,
 					(DAY(ACT_FECHA)-DAY(HOY)) AS diasFaltantes
 				FROM
					ACTIVIDAD,
					ASIGNATURA,
					PRIORIDAD
 				WHERE
					PRI_NIVEL = ACT_PRI
					AND ASI_ID = ACT_ID_ASI
					AND diasFaltantes BETWEEN 0 AND PRI_CANT
				 )
 		SELECT
 			"Tienes una actividad de " || A.asig ||(CASE
 														WHEN diasFaltantes = 0
															THEN " hoy."
														WHEN diasFaltantes = 1
															THEN " en 1 dia."
														ELSE " en " || A.diasFaltantes || " dias."
													END)
 		FROM A
 return act
